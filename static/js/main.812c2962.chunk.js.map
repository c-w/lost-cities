{"version":3,"sources":["ActionButton.js","game.js","GameEnd.js","ControlledCheckbox.js","Scorer.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","ActionButton","onClick","label","icon","classes","Fab","color","aria-label","className","PLAYER_1","MULTIPLIERS","isMultiplier","card","indexOf","CARDS","EXPEDITIONS","yellow","blue","grey","green","red","gameStateMachine","Machine","id","initial","context","gameRound","activePlayer","player1Scores","player2Scores","states","round1Player1","entry","on","DONE","target","actions","round1Player2","round2Player1","round2Player2","round3Player1","round3Player2","highscore","assign","exit","RESTART","setRound1","setRound2","setRound3","setPlayer1","setPlayer2","setPlayer1Score","event","payload","setPlayer2Score","winnerIcon","paddingLeft","WinnerIcon","GameEnd","onActionClick","player1Score","sum","player2Score","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","Typography","variant","TableBody","zip","map","i","score1","score2","key","ControlledCheckbox","state","checked","onChange","props","data","setState","this","Checkbox","PureComponent","ExpeditionCards","newState","cards","Object","entries","filter","parseInt","length","partition","multipliers","numbers","calculateScore","fromPairs","ColorCheckbox","withStyles","root","FormControl","style","width","FormGroup","FormControlLabel","control","ExpeditionPanel","score","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Scorer","onScoreChange","values","padding","Grid","container","item","xs","sm","lg","flexGrow","appBar","paddingTop","paddingBottom","title","Title","GameRound","PlayerScore","avatar","active","Badge","badgeContent","showZero","max","overlap","IconButton","disabled","TopBar","AppBar","Toolbar","App","current","initialState","service","interpret","onTransition","onScorerClick","send","type","onGameEndClick","start","stop","matches","value","Boolean","window","location","hostname","match","library","add","faCheck","faCompass","faHandshake","faRedo","faTrophy","faUserAstronaut","faUserNinja","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.812c2962.chunk.js","sourcesContent":["import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Fab from '@material-ui/core/Fab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction ActionButton({ onClick, label, icon }) {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      color=\"primary\"\n      aria-label={label}\n      className={classes.fab}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </Fab>\n  );\n}\n\nexport default ActionButton;\n","import partition from 'lodash.partition';\nimport sum from 'lodash.sum';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { Machine, assign } from 'xstate';\n\nexport const PLAYER_1 = 'user-astronaut';\nexport const PLAYER_2 = 'user-ninja';\n\nconst MULTIPLIERS = [-1, -2, -3];\n\nexport function isMultiplier(card) {\n  return MULTIPLIERS.indexOf(card) !== -1;\n}\n\nexport const CARDS = [...MULTIPLIERS, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const EXPEDITIONS = [\n  yellow[800],\n  blue[500],\n  grey[500],\n  green[500],\n  red[500],\n];\n\nexport function calculateScore(cards) {\n  if (cards.length === 0) {\n    return 0;\n  }\n\n  const [multipliers, numbers] = partition(cards, isMultiplier);\n\n  const score = sum(numbers) - 20;\n  const multiplier = multipliers.length + 1;\n  const lengthBonus = cards.length >= 8 ? 20 : 0;\n\n  return score * multiplier + lengthBonus;\n}\n\nexport const gameStateMachine = Machine(\n  {\n    id: 'game',\n    initial: 'round1Player1',\n    context: {\n      gameRound: 1,\n      activePlayer: PLAYER_1,\n      player1Scores: [],\n      player2Scores: [],\n    },\n    states: {\n      round1Player1: {\n        entry: ['setRound1', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round1Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round1Player2: {\n        entry: ['setRound1', 'setPlayer2'],\n        on: {\n          DONE: { target: 'round2Player1', actions: ['setPlayer2Score'] },\n        },\n      },\n      round2Player1: {\n        entry: ['setRound2', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round2Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round2Player2: {\n        entry: ['setRound2', 'setPlayer2'],\n        on: {\n          DONE: { target: 'round3Player1', actions: ['setPlayer2Score'] },\n        },\n      },\n      round3Player1: {\n        entry: ['setRound3', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round3Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round3Player2: {\n        entry: ['setRound3', 'setPlayer2'],\n        on: {\n          DONE: { target: 'highscore', actions: ['setPlayer2Score'] },\n        },\n      },\n      highscore: {\n        entry: assign({ gameRound: null, activePlayer: null }),\n        exit: assign({\n          player1Scores: [],\n          player2Scores: [],\n        }),\n        on: {\n          RESTART: { target: 'round1Player1' },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setRound1: assign({ gameRound: 1 }),\n      setRound2: assign({ gameRound: 2 }),\n      setRound3: assign({ gameRound: 3 }),\n      setPlayer1: assign({ activePlayer: PLAYER_1 }),\n      setPlayer2: assign({ activePlayer: PLAYER_2 }),\n      setPlayer1Score: assign({\n        player1Scores: (context, event) => [\n          ...context.player1Scores,\n          event.payload,\n        ],\n      }),\n      setPlayer2Score: assign({\n        player2Scores: (context, event) => [\n          ...context.player2Scores,\n          event.payload,\n        ],\n      }),\n    },\n  }\n);\n","import React, { Fragment } from 'react';\nimport sum from 'lodash.sum';\nimport zip from 'lodash.zip';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ActionButton from './ActionButton';\nimport { PLAYER_1, PLAYER_2 } from './game';\n\nconst useStyles = makeStyles(theme => ({\n  winnerIcon: {\n    paddingLeft: theme.spacing(1),\n    color: '#D4AF37',\n  },\n}));\n\nfunction WinnerIcon() {\n  const classes = useStyles();\n\n  return (\n    <FontAwesomeIcon\n      className={classes.winnerIcon}\n      icon=\"trophy\"\n      aria-label=\"Winner\"\n    />\n  );\n}\n\nfunction GameEnd({ player1Scores, player2Scores, onActionClick }) {\n  const player1Score = sum(player1Scores);\n  const player2Score = sum(player2Scores);\n\n  return (\n    <Fragment>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                <Typography variant=\"srOnly\">Label</Typography>\n              </TableCell>\n              <TableCell align=\"center\">\n                <FontAwesomeIcon icon={PLAYER_1} aria-label=\"Player 1\" />\n                {player1Score > player2Score && <WinnerIcon />}\n              </TableCell>\n              <TableCell align=\"center\">\n                <FontAwesomeIcon icon={PLAYER_2} aria-label=\"Player 2\" />\n                {player2Score > player1Score && <WinnerIcon />}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {zip(player1Scores, player2Scores).map(([score1, score2], i) => (\n              <TableRow key={i}>\n                <TableCell align=\"center\">Round {i + 1}</TableCell>\n                <TableCell align=\"center\">{score1}</TableCell>\n                <TableCell align=\"center\">{score2}</TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell align=\"center\">Total</TableCell>\n              <TableCell align=\"center\">{player1Score}</TableCell>\n              <TableCell align=\"center\">{player2Score}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ActionButton onClick={onActionClick} icon=\"redo\" label=\"Restart\" />\n    </Fragment>\n  );\n}\n\nexport default GameEnd;\n","import React, { PureComponent } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass ControlledCheckbox extends PureComponent {\n  state = {\n    checked: false,\n  };\n\n  onChange = event => {\n    const { onChange, data } = this.props;\n    const { checked } = event.target;\n\n    this.setState({ checked }, () => onChange({ checked, data }));\n  };\n\n  render() {\n    const { onChange, data, ...props } = this.props;\n    const { checked } = this.state;\n\n    return <Checkbox onChange={this.onChange} checked={checked} {...props} />;\n  }\n}\n\nexport default ControlledCheckbox;\n","import React, { Fragment, PureComponent } from 'react';\nimport fromPairs from 'lodash.frompairs';\nimport sum from 'lodash.sum';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ActionButton from './ActionButton';\nimport ControlledCheckbox from './ControlledCheckbox';\nimport { CARDS, EXPEDITIONS, calculateScore, isMultiplier } from './game';\n\nclass ExpeditionCards extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = fromPairs(CARDS.map(card => [card, false]));\n\n    this.ColorCheckbox = withStyles({\n      root: {\n        color: props.color,\n        '&$checked': {\n          color: props.color,\n        },\n      },\n      checked: {},\n    })(props => <ControlledCheckbox color=\"default\" {...props} />);\n  }\n\n  onChange = ({ data, checked }) => {\n    const { onChange } = this.props;\n\n    const newState = { ...this.state };\n    newState[data] = checked;\n\n    const cards = Object.entries(newState)\n      .filter(([_card, checked]) => checked)\n      .map(([card, _checked]) => parseInt(card, 10));\n\n    this.setState(newState, () => onChange(calculateScore(cards)));\n  };\n\n  render() {\n    const { color } = this.props;\n\n    return (\n      <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n        <FormGroup>\n          {CARDS.map(card => (\n            <FormControlLabel\n              key={card}\n              control={\n                <this.ColorCheckbox data={card} onChange={this.onChange} />\n              }\n              label={\n                <div style={{ color }}>\n                  {isMultiplier(card) ? (\n                    <FontAwesomeIcon icon=\"handshake\" aria-label=\"Investment\" />\n                  ) : (\n                    <Typography>{card}</Typography>\n                  )}\n                </div>\n              }\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    );\n  }\n}\n\nclass ExpeditionPanel extends PureComponent {\n  state = {\n    score: null,\n  };\n\n  onChange = score => {\n    const { color, onChange } = this.props;\n\n    this.setState({ score }, () => onChange({ color, score }));\n  };\n\n  render() {\n    const { color } = this.props;\n    const { score } = this.state;\n\n    return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary>\n          <Typography style={{ color }}>\n            <FontAwesomeIcon icon=\"compass\" />\n            &nbsp;\n            <Typography variant=\"body1\" component=\"span\">\n              {score == null ? 'Click to start expedition' : `Score: ${score}`}\n            </Typography>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ExpeditionCards color={color} onChange={this.onChange} />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nclass Scorer extends PureComponent {\n  state = fromPairs(EXPEDITIONS.map(color => [color, 0]));\n\n  onScoreChange = ({ color, score }) => this.setState({ [color]: score });\n\n  onActionClick = () =>\n    this.props.onActionClick(sum(Object.values(this.state)));\n\n  render() {\n    const spacing = 2;\n\n    return (\n      <Fragment>\n        <div style={{ padding: `${8 * spacing}px` }}>\n          <Grid container spacing={spacing}>\n            {EXPEDITIONS.map(color => (\n              <Grid key={color} item xs={12} sm={6} lg>\n                <ExpeditionPanel color={color} onChange={this.onScoreChange} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n        <ActionButton onClick={this.onActionClick} icon=\"check\" label=\"Done\" />\n      </Fragment>\n    );\n  }\n}\n\nexport default Scorer;\n","import React, { Fragment } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PLAYER_1, PLAYER_2 } from './game';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  gameRound: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Title({ className }) {\n  return (\n    <Typography variant=\"h6\" component=\"h1\" className={className}>\n      Lost Cities\n    </Typography>\n  );\n}\n\nfunction GameRound({ className, gameRound }) {\n  return (\n    <Typography variant=\"subtitle1\" component=\"span\" className={className}>\n      Round {gameRound}\n    </Typography>\n  );\n}\n\nfunction PlayerScore({ score, avatar, active, label }) {\n  return (\n    <Badge\n      badgeContent={score}\n      color=\"secondary\"\n      aria-label={label}\n      showZero\n      max={999}\n      overlap=\"circle\"\n    >\n      <IconButton color=\"inherit\" disabled={!active}>\n        <FontAwesomeIcon icon={avatar} />\n      </IconButton>\n    </Badge>\n  );\n}\n\nfunction TopBar({ gameRound, player1Score, player2Score, activePlayer }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Title className={classes.title} gameRound={gameRound} />\n          {gameRound != null && (\n            <Fragment>\n              <GameRound className={classes.gameRound} gameRound={gameRound} />\n              <PlayerScore\n                label={\n                  activePlayer === PLAYER_1\n                    ? 'Player 1 score, active player'\n                    : 'Player 1 score'\n                }\n                score={player1Score}\n                avatar={PLAYER_1}\n                active={activePlayer === PLAYER_1}\n              />\n              <PlayerScore\n                label={\n                  activePlayer === PLAYER_2\n                    ? 'Player 2 score, active player'\n                    : 'Player 2 score'\n                }\n                score={player2Score}\n                avatar={PLAYER_2}\n                active={activePlayer === PLAYER_2}\n              />\n            </Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React, { Fragment, PureComponent } from 'react';\nimport sum from 'lodash.sum';\nimport { interpret } from 'xstate';\nimport GameEnd from './GameEnd';\nimport Scorer from './Scorer';\nimport TopBar from './TopBar';\nimport { gameStateMachine } from './game';\n\nclass App extends PureComponent {\n  state = {\n    current: gameStateMachine.initialState,\n  };\n\n  service = interpret(gameStateMachine).onTransition(current =>\n    this.setState({ current })\n  );\n\n  componentDidMount() {\n    this.service.start();\n  }\n\n  componentWillUnmount() {\n    this.service.stop();\n  }\n\n  onScorerClick = payload => this.service.send({ type: 'DONE', payload });\n\n  onGameEndClick = payload => this.service.send({ type: 'RESTART', payload });\n\n  render() {\n    const { current } = this.state;\n\n    const {\n      activePlayer,\n      gameRound,\n      player1Scores,\n      player2Scores,\n    } = current.context;\n\n    return (\n      <Fragment>\n        <TopBar\n          gameRound={gameRound}\n          player1Score={sum(player1Scores)}\n          player2Score={sum(player2Scores)}\n          activePlayer={activePlayer}\n        />\n        {current.matches('highscore') ? (\n          <GameEnd\n            player1Scores={player1Scores}\n            player2Scores={player2Scores}\n            onActionClick={this.onGameEndClick}\n          />\n        ) : (\n          <Scorer key={current.value} onActionClick={this.onScorerClick} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faCompass } from '@fortawesome/free-solid-svg-icons/faCompass';\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons/faHandshake';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons/faRedo';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons/faTrophy';\nimport { faUserAstronaut } from '@fortawesome/free-solid-svg-icons/faUserAstronaut';\nimport { faUserNinja } from '@fortawesome/free-solid-svg-icons/faUserNinja';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nlibrary.add(\n  faCheck,\n  faCompass,\n  faHandshake,\n  faRedo,\n  faTrophy,\n  faUserAstronaut,\n  faUserNinja\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}