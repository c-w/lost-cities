{"version":3,"sources":["ActionButton.js","utils.js","game.js","i8n.js","GameEnd.js","ControlledCheckbox.js","Scorer.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","ActionButton","onClick","label","icon","classes","Fab","color","aria-label","className","sum","numbers","reduce","number","fromPairs","pairs","obj","key","value","PLAYER_1","MULTIPLIERS","isMultiplier","card","indexOf","CARDS","EXPEDITIONS","yellow","blue","grey","green","red","calculateScore","cards","length","items","predicate","matching","nonMatching","item","push","partition","multipliers","gameStateMachine","Machine","id","initial","context","gameRound","activePlayer","player1Scores","player2Scores","states","round1Player1","entry","on","DONE","target","actions","round1Player2","round2Player1","round2Player2","round3Player1","round3Player2","highscore","assign","exit","RESTART","setRound1","setRound2","setRound3","setPlayer1","setPlayer2","setPlayer1Score","event","payload","setPlayer2Score","winner","player1","player2","round","total","restart","investment","clickToStart","score","done","lostCities","player1Score","player2Score","winnerIcon","paddingLeft","totalRow","fontWeight","typography","fontWeightBold","GameEnd","onActionClick","i8n","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","Typography","variant","TableBody","xs","ys","result","i","zip","map","score1","score2","format","ControlledCheckbox","state","checked","onChange","props","data","setState","this","Checkbox","PureComponent","ExpeditionCards","newState","Object","entries","filter","parseInt","ColorCheckbox","withStyles","root","FormControl","style","width","FormGroup","FormControlLabel","control","ExpeditionPanel","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Scorer","onScoreChange","values","padding","Grid","container","sm","lg","appBar","paddingTop","paddingBottom","title","flexGrow","Title","GameRound","PlayerScore","avatar","active","Badge","badgeContent","showZero","max","overlap","IconButton","disabled","TopBar","AppBar","Toolbar","STATE_KEY","App","current","initialState","service","interpret","onTransition","localStorage","setItem","JSON","stringify","e","console","error","onScorerClick","send","type","onGameEndClick","savedState","parse","getItem","lastState","State","create","currentState","resolveState","start","stop","matches","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","extend","String","prototype","library","add","faCheck","faCompass","faHandshake","faRedo","faTrophy","faUserAstronaut","faUserNinja","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.63f46b16.chunk.js","sourcesContent":["import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Fab from '@material-ui/core/Fab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction ActionButton({ onClick, label, icon }) {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      color=\"primary\"\n      aria-label={label}\n      className={classes.fab}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </Fab>\n  );\n}\n\nexport default ActionButton;\n","export function sum(numbers) {\n  return numbers.reduce((sum, number) => sum + number, 0);\n}\n\nexport function partition(items, predicate) {\n  const matching = [];\n  const nonMatching = [];\n\n  for (const item of items) {\n    if (predicate(item)) {\n      matching.push(item);\n    } else {\n      nonMatching.push(item);\n    }\n  }\n\n  return [matching, nonMatching];\n}\n\nexport function zip(xs, ys) {\n  const result = [];\n\n  for (let i = 0; i < xs.length; i++) {\n    result.push([xs[i], ys[i]]);\n  }\n\n  return result;\n}\n\nexport function fromPairs(pairs) {\n  const obj = {};\n\n  for (const [key, value] of pairs) {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { Machine, assign } from 'xstate';\nimport { partition, sum } from './utils';\n\nexport const PLAYER_1 = 'user-astronaut';\nexport const PLAYER_2 = 'user-ninja';\n\nconst MULTIPLIERS = [-1, -2, -3];\n\nexport function isMultiplier(card) {\n  return MULTIPLIERS.indexOf(card) !== -1;\n}\n\nexport const CARDS = [...MULTIPLIERS, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const EXPEDITIONS = [\n  yellow[800],\n  blue[500],\n  grey[500],\n  green[500],\n  red[500],\n];\n\nexport function calculateScore(cards) {\n  if (cards.length === 0) {\n    return 0;\n  }\n\n  const [multipliers, numbers] = partition(cards, isMultiplier);\n\n  const score = sum(numbers) - 20;\n  const multiplier = multipliers.length + 1;\n  const lengthBonus = cards.length >= 8 ? 20 : 0;\n\n  return score * multiplier + lengthBonus;\n}\n\nexport const gameStateMachine = Machine(\n  {\n    id: 'game',\n    initial: 'round1Player1',\n    context: {\n      gameRound: 1,\n      activePlayer: PLAYER_1,\n      player1Scores: [],\n      player2Scores: [],\n    },\n    states: {\n      round1Player1: {\n        entry: ['setRound1', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round1Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round1Player2: {\n        entry: ['setRound1', 'setPlayer2'],\n        on: {\n          DONE: { target: 'round2Player1', actions: ['setPlayer2Score'] },\n        },\n      },\n      round2Player1: {\n        entry: ['setRound2', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round2Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round2Player2: {\n        entry: ['setRound2', 'setPlayer2'],\n        on: {\n          DONE: { target: 'round3Player1', actions: ['setPlayer2Score'] },\n        },\n      },\n      round3Player1: {\n        entry: ['setRound3', 'setPlayer1'],\n        on: {\n          DONE: { target: 'round3Player2', actions: ['setPlayer1Score'] },\n        },\n      },\n      round3Player2: {\n        entry: ['setRound3', 'setPlayer2'],\n        on: {\n          DONE: { target: 'highscore', actions: ['setPlayer2Score'] },\n        },\n      },\n      highscore: {\n        entry: assign({ gameRound: null, activePlayer: null }),\n        exit: assign({\n          player1Scores: [],\n          player2Scores: [],\n        }),\n        on: {\n          RESTART: { target: 'round1Player1' },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setRound1: assign({ gameRound: 1 }),\n      setRound2: assign({ gameRound: 2 }),\n      setRound3: assign({ gameRound: 3 }),\n      setPlayer1: assign({ activePlayer: PLAYER_1 }),\n      setPlayer2: assign({ activePlayer: PLAYER_2 }),\n      setPlayer1Score: assign({\n        player1Scores: (context, event) => [\n          ...context.player1Scores,\n          event.payload,\n        ],\n      }),\n      setPlayer2Score: assign({\n        player2Scores: (context, event) => [\n          ...context.player2Scores,\n          event.payload,\n        ],\n      }),\n    },\n  }\n);\n","export default {\n  winner: 'Winner',\n  label: 'Label',\n  player1: 'Player 1',\n  player2: 'Player 2',\n  round: 'Round {0}',\n  total: 'Total',\n  restart: 'Restart',\n  investment: 'Investment',\n  clickToStart: 'Click to start expedition',\n  score: 'Score: {0}',\n  done: 'Done',\n  lostCities: 'Lost Cities',\n  player1Score: 'Player 1 score',\n  player2Score: 'Player 2 score',\n  activePlayer: 'Active player',\n};\n","import React, { Fragment } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ActionButton from './ActionButton';\nimport { PLAYER_1, PLAYER_2 } from './game';\nimport { sum, zip } from './utils';\nimport i8n from './i8n';\n\nconst useStyles = makeStyles(theme => ({\n  winnerIcon: {\n    paddingLeft: theme.spacing(1),\n    color: '#D4AF37',\n  },\n  totalRow: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nfunction GameEnd({ player1Scores, player2Scores, onActionClick }) {\n  const classes = useStyles();\n\n  const player1Score = sum(player1Scores);\n  const player2Score = sum(player2Scores);\n\n  const winnerIcon = (\n    <FontAwesomeIcon\n      className={classes.winnerIcon}\n      icon=\"trophy\"\n      aria-label={i8n.winner}\n    />\n  );\n\n  return (\n    <Fragment>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                <Typography variant=\"srOnly\">{i8n.label}</Typography>\n              </TableCell>\n              <TableCell align=\"center\">\n                <FontAwesomeIcon icon={PLAYER_1} aria-label={i8n.player1} />\n                {player1Score > player2Score && winnerIcon}\n              </TableCell>\n              <TableCell align=\"center\">\n                <FontAwesomeIcon icon={PLAYER_2} aria-label={i8n.player2} />\n                {player2Score > player1Score && winnerIcon}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {zip(player1Scores, player2Scores).map(([score1, score2], i) => (\n              <TableRow key={i}>\n                <TableCell align=\"center\">{i8n.round.format(i + 1)}</TableCell>\n                <TableCell align=\"center\">{score1}</TableCell>\n                <TableCell align=\"center\">{score2}</TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell className={classes.totalRow} align=\"center\">\n                {i8n.total}\n              </TableCell>\n              <TableCell className={classes.totalRow} align=\"center\">\n                {player1Score}\n              </TableCell>\n              <TableCell className={classes.totalRow} align=\"center\">\n                {player2Score}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ActionButton onClick={onActionClick} icon=\"redo\" label={i8n.restart} />\n    </Fragment>\n  );\n}\n\nexport default GameEnd;\n","import React, { PureComponent } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass ControlledCheckbox extends PureComponent {\n  state = {\n    checked: false,\n  };\n\n  onChange = event => {\n    const { onChange, data } = this.props;\n    const { checked } = event.target;\n\n    this.setState({ checked }, () => onChange({ checked, data }));\n  };\n\n  render() {\n    const { onChange, data, ...props } = this.props;\n    const { checked } = this.state;\n\n    return <Checkbox onChange={this.onChange} checked={checked} {...props} />;\n  }\n}\n\nexport default ControlledCheckbox;\n","import React, { Fragment, PureComponent } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ActionButton from './ActionButton';\nimport ControlledCheckbox from './ControlledCheckbox';\nimport { CARDS, EXPEDITIONS, calculateScore, isMultiplier } from './game';\nimport { fromPairs, sum } from './utils';\nimport i8n from './i8n';\n\nclass ExpeditionCards extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = fromPairs(CARDS.map(card => [card, false]));\n\n    this.ColorCheckbox = withStyles({\n      root: {\n        color: props.color,\n        '&$checked': {\n          color: props.color,\n        },\n      },\n      checked: {},\n    })(props => <ControlledCheckbox color=\"default\" {...props} />);\n  }\n\n  onChange = ({ data, checked }) => {\n    const { onChange } = this.props;\n\n    const newState = { ...this.state };\n    newState[data] = checked;\n\n    const cards = Object.entries(newState)\n      .filter(([_card, checked]) => checked)\n      .map(([card, _checked]) => parseInt(card, 10));\n\n    this.setState(newState, () => onChange(calculateScore(cards)));\n  };\n\n  render() {\n    const { color } = this.props;\n\n    return (\n      <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n        <FormGroup>\n          {CARDS.map(card => (\n            <FormControlLabel\n              key={card}\n              control={\n                <this.ColorCheckbox data={card} onChange={this.onChange} />\n              }\n              label={\n                <div style={{ color }}>\n                  {isMultiplier(card) ? (\n                    <FontAwesomeIcon\n                      icon=\"handshake\"\n                      aria-label={i8n.investment}\n                    />\n                  ) : (\n                    <Typography>{card}</Typography>\n                  )}\n                </div>\n              }\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    );\n  }\n}\n\nclass ExpeditionPanel extends PureComponent {\n  state = {\n    score: null,\n  };\n\n  onChange = score => {\n    const { color, onChange } = this.props;\n\n    this.setState({ score }, () => onChange({ color, score }));\n  };\n\n  render() {\n    const { color } = this.props;\n    const { score } = this.state;\n\n    return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary>\n          <Typography style={{ color }}>\n            <FontAwesomeIcon icon=\"compass\" />\n            &nbsp;\n            <Typography variant=\"body1\" component=\"span\">\n              {score == null ? i8n.clickToStart : i8n.score.format(score)}\n            </Typography>\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ExpeditionCards color={color} onChange={this.onChange} />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nclass Scorer extends PureComponent {\n  state = fromPairs(EXPEDITIONS.map(color => [color, 0]));\n\n  onScoreChange = ({ color, score }) => this.setState({ [color]: score });\n\n  onActionClick = () =>\n    this.props.onActionClick(sum(Object.values(this.state)));\n\n  render() {\n    const spacing = 2;\n\n    return (\n      <Fragment>\n        <div style={{ padding: `${8 * spacing}px` }}>\n          <Grid container spacing={spacing}>\n            {EXPEDITIONS.map(color => (\n              <Grid key={color} item xs={12} sm={6} lg>\n                <ExpeditionPanel color={color} onChange={this.onScoreChange} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n        <ActionButton\n          onClick={this.onActionClick}\n          icon=\"check\"\n          label={i8n.done}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Scorer;\n","import React, { Fragment } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PLAYER_1, PLAYER_2 } from './game';\nimport i8n from './i8n';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  gameRound: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Title({ className }) {\n  return (\n    <Typography variant=\"h6\" component=\"h1\" className={className}>\n      {i8n.lostCities}\n    </Typography>\n  );\n}\n\nfunction GameRound({ className, gameRound }) {\n  return (\n    <Typography variant=\"subtitle1\" component=\"span\" className={className}>\n      {i8n.round.format(gameRound)}\n    </Typography>\n  );\n}\n\nfunction PlayerScore({ score, avatar, active, label }) {\n  return (\n    <Badge\n      badgeContent={score}\n      color=\"secondary\"\n      aria-label={label}\n      showZero\n      max={999}\n      overlap=\"circle\"\n    >\n      <IconButton\n        color=\"inherit\"\n        disabled={!active}\n        aria-label={active ? i8n.activePlayer : null}\n      >\n        <FontAwesomeIcon icon={avatar} />\n      </IconButton>\n    </Badge>\n  );\n}\n\nfunction TopBar({ gameRound, player1Score, player2Score, activePlayer }) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <Title className={classes.title} gameRound={gameRound} />\n        {gameRound != null && (\n          <Fragment>\n            <GameRound className={classes.gameRound} gameRound={gameRound} />\n            <PlayerScore\n              label={i8n.player1Score}\n              score={player1Score}\n              avatar={PLAYER_1}\n              active={activePlayer === PLAYER_1}\n            />\n            <PlayerScore\n              label={i8n.player2Score}\n              score={player2Score}\n              avatar={PLAYER_2}\n              active={activePlayer === PLAYER_2}\n            />\n          </Fragment>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default TopBar;\n","import React, { Fragment, PureComponent } from 'react';\nimport { State, interpret } from 'xstate';\nimport GameEnd from './GameEnd';\nimport Scorer from './Scorer';\nimport TopBar from './TopBar';\nimport { gameStateMachine } from './game';\nimport { sum } from './utils';\n\nconst STATE_KEY = 'game-state-machine';\n\nclass App extends PureComponent {\n  state = {\n    current: gameStateMachine.initialState,\n  };\n\n  service = interpret(gameStateMachine).onTransition(current => {\n    this.setState({ current });\n\n    try {\n      localStorage.setItem(STATE_KEY, JSON.stringify(current));\n    } catch (e) {\n      console.error('LocalStorage not available', e);\n    }\n  });\n\n  componentDidMount() {\n    const savedState = JSON.parse(localStorage.getItem(STATE_KEY));\n    const lastState = State.create(savedState || gameStateMachine.initialState);\n    const currentState = gameStateMachine.resolveState(lastState);\n\n    this.service.start(currentState);\n  }\n\n  componentWillUnmount() {\n    this.service.stop();\n  }\n\n  onScorerClick = payload => this.service.send({ type: 'DONE', payload });\n\n  onGameEndClick = () => this.service.send({ type: 'RESTART' });\n\n  render() {\n    const { current } = this.state;\n\n    const {\n      activePlayer,\n      gameRound,\n      player1Scores,\n      player2Scores,\n    } = current.context;\n\n    return (\n      <Fragment>\n        <TopBar\n          gameRound={gameRound}\n          player1Score={sum(player1Scores)}\n          player2Score={sum(player2Scores)}\n          activePlayer={activePlayer}\n        />\n        {current.matches('highscore') ? (\n          <GameEnd\n            player1Scores={player1Scores}\n            player2Scores={player2Scores}\n            onActionClick={this.onGameEndClick}\n          />\n        ) : (\n          <Scorer key={current.value} onActionClick={this.onScorerClick} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport format from 'string-format';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faCompass } from '@fortawesome/free-solid-svg-icons/faCompass';\nimport { faHandshake } from '@fortawesome/free-solid-svg-icons/faHandshake';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons/faRedo';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons/faTrophy';\nimport { faUserAstronaut } from '@fortawesome/free-solid-svg-icons/faUserAstronaut';\nimport { faUserNinja } from '@fortawesome/free-solid-svg-icons/faUserNinja';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nformat.extend(String.prototype, {});\n\nlibrary.add(\n  faCheck,\n  faCompass,\n  faHandshake,\n  faRedo,\n  faTrophy,\n  faUserAstronaut,\n  faUserNinja\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}